{"version":3,"sources":["components/WordCount/WordCount.js","components/SynonymsSelector/SynonymsSelector.js","libs/MediaQueries.js","components/WordCountPopover/WordCountPopover.js","components/CodeMirrorWrapper/addons/searchcursor.js","components/CodeMirrorWrapper/CodeMirrorWrapper.js","components/App/App.js","serviceWorker.js","index.js","empty_image.svg"],"names":["WordCount","props","className","words","sort","a","b","count","map","word","key","value","line","SynonymsSelector","React","useState","requestStatus","synonyms","state","setState","useEffect","prevState","fetch","toLowerCase","normalize","replace","method","headers","then","res","text","html","el","document","createElement","innerHTML","querySelectorAll","forEach","synonym","push","innerText","catch","error","console","log","hideTitle","slice","onClick","replaceWord","MediaQueries","SM","window","matchMedia","matches","MD","LG","XL","WordCountPopover","content","trigger","placement","shape","type","length","CodeMirror","doFold","noFold","Pos","ensureFlags","regexp","flags","current","ignoreCase","global","multiline","regexpFlags","target","i","indexOf","charAt","RegExp","source","maybeMultiline","test","searchRegexpForward","doc","start","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","searchRegexpForwardMultiline","chunk","curLine","before","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","end","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","this","atOccurrence","clipPos","reverse","String","prototype","str","findNext","find","findPrevious","result","cmpPos","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","anchor","head","setSelections","CodeMirrorWrapper","enableBackground","drawer","marker","config","checkMode","searchcursor","popupOpen","processText","bind","clickOnWord","editor","getElementById","lineWrapping","focus","on","getWrapperElement","addEventListener","instance","changeObj","getValue","afterHighlightCallback","removed","highlightTextChange","wordsCount","lineNumber","eachLine","wordCount","wordObject","filter","obj","highlightText","setWords","difference","mark","markText","setTimeout","clear","clearMarks","regex","cursor","position","undefined","getAllMarks","event","lineCh","coordsChar","left","clientX","clientY","markers","findMarksAt","style","id","src","image","alt","title","closable","onClose","visible","height","message","Component","App","desktopMode","setDesktopMode","resizeHandler","removeEventListener","handler","header","querySelector","scrollTop","classList","add","remove","body","checkedChildren","BulbFilled","unCheckedChildren","BulbOutlined","onChange","enable","metaTag","setAttribute","href","rel","GithubOutlined","MailFilled","LinkedinFilled","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ceb801a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './WordCount.css';\r\n\r\nexport default function WordCount(props) {\r\n\r\n    return (<div className=\"word-count\">\r\n        {props.words.sort(((a, b) => {\r\n            if (a.count < b.count) return 1;\r\n            else if (a.count > b.count) return -1;\r\n            else return 0;\r\n        })).map(word => (<div key={`${word.value}_${word.count}${word.line ? `_${word.line}` : ''}`} className=\"word-count-group\">\r\n            <span className=\"word-count-title\">{word.value}</span>\r\n            <span className=\"word-count-subtitle\">{word.count} repetições</span>\r\n        </div>))}\r\n    </div>);\r\n}","import React from \"react\";\r\nimport './SynonymsSelector.css';\r\n\r\nexport default function SynonymsSelector(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        requestStatus: -1,\r\n        synonyms: []\r\n    });\r\n\r\n    React.useEffect(() => {\r\n\r\n        setState(prevState => ({...prevState, requestStatus: 1}));\r\n\r\n        let request = fetch(`https://cors-anywhere.herokuapp.com/https://www.sinonimos.com.br/${props.word.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")}`, {\r\n            method: 'GET',\r\n            headers: {'x-requested-with': 'xmlhttprequest', 'Content-Type': 'text/plain; charset=ISO-8859-1'}\r\n        });\r\n\r\n        request\r\n            .then(res => res.text())\r\n            .then(html => {\r\n\r\n                let el = document.createElement('div');\r\n\r\n                el.innerHTML = html;\r\n\r\n                let synonyms = el.querySelectorAll('.s-wrapper .sinonimos a');\r\n\r\n                let words = [];\r\n\r\n                synonyms.forEach(synonym => {\r\n\r\n                    words.push(synonym.innerText);\r\n                });\r\n\r\n                setState(prevState => ({...prevState, synonyms: words, requestStatus: 200}))\r\n\r\n            }).catch(error => console.log(error))\r\n\r\n    }, [props.word]);\r\n\r\n    return (<div className=\"synonyms-selector\">\r\n        {!props.hideTitle && <span className=\"synonyms-selector-title\">{props.word}</span>}\r\n        <div className=\"synonyms-container\">\r\n            {state.requestStatus === 200\r\n                ? state.synonyms.slice(0, 10).map(synonym => <span key={synonym} onClick={() => props.replaceWord(synonym)} >{synonym}</span>)\r\n                : <span>carregando...</span>\r\n            }\r\n        </div>\r\n    </div>)\r\n}","const MediaQueries = {\r\n    SM: () => window.matchMedia('(min-width: 576px)').matches,\r\n    MD: () => window.matchMedia('(min-width: 768px)').matches,\r\n    LG: () => window.matchMedia('(min-width: 992px)').matches,\r\n    XL: () => window.matchMedia('(min-width: 1200px)').matches\r\n};\r\nexport default MediaQueries;","import React from \"react\";\r\nimport {Popover, Button} from \"antd\";\r\nimport './WordCountPopover.css';\r\n\r\nexport default function WordCountPopover (props) {\r\n\r\n    let content = (\r\n        <div className=\"word-count-popover-content\">\r\n            { props.words.sort(((a, b) => {\r\n                if (a.count < b.count) return 1;\r\n                else if (a.count > b.count) return -1;\r\n                else return 0;\r\n            })).map(word => (<div key={`${word.value}_${word.count}${word.line ? `_${word.line}` : ''}`} className=\"word-count-group\">\r\n                <span className=\"word-count-popover-title\">{word.value}</span>\r\n                <span className=\"word-count-popover-subtitle\">{word.count} repetições</span>\r\n            </div>))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"word-count-popover\">\r\n            <Popover content={content} trigger=\"click\" placement=\"bottomRight\">\r\n                <Button shape=\"round\" type=\"primary\" >{props.words ? props.words.length : 0} palavras com repetições</Button>\r\n            </Popover>\r\n        </div>\r\n    )\r\n\r\n}","// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\nexport default function(CodeMirror) {\r\n    \r\n    var Pos = CodeMirror.Pos\r\n\r\n    function regexpFlags(regexp) {\r\n        var flags = regexp.flags\r\n        return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\r\n            + (regexp.global ? \"g\" : \"\")\r\n            + (regexp.multiline ? \"m\" : \"\")\r\n    }\r\n\r\n    function ensureFlags(regexp, flags) {\r\n        var current = regexpFlags(regexp), target = current\r\n        for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\r\n            target += flags.charAt(i)\r\n        return current == target ? regexp : new RegExp(regexp.source, target)\r\n    }\r\n\r\n    function maybeMultiline(regexp) {\r\n        return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\r\n    }\r\n\r\n    function searchRegexpForward(doc, regexp, start) {\r\n        regexp = ensureFlags(regexp, \"g\")\r\n        for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\r\n            regexp.lastIndex = ch\r\n            var string = doc.getLine(line), match = regexp.exec(string)\r\n            if (match)\r\n                return {from: Pos(line, match.index),\r\n                    to: Pos(line, match.index + match[0].length),\r\n                    match: match}\r\n        }\r\n    }\r\n\r\n    function searchRegexpForwardMultiline(doc, regexp, start) {\r\n        if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\r\n\r\n        regexp = ensureFlags(regexp, \"gm\")\r\n        var string, chunk = 1\r\n        for (var line = start.line, last = doc.lastLine(); line <= last;) {\r\n            // This grows the search buffer in exponentially-sized chunks\r\n            // between matches, so that nearby matches are fast and don't\r\n            // require concatenating the whole document (in case we're\r\n            // searching for something that has tons of matches), but at the\r\n            // same time, the amount of retries is limited.\r\n            for (var i = 0; i < chunk; i++) {\r\n                if (line > last) break\r\n                var curLine = doc.getLine(line++)\r\n                string = string == null ? curLine : string + \"\\n\" + curLine\r\n            }\r\n            chunk = chunk * 2\r\n            regexp.lastIndex = start.ch\r\n            var match = regexp.exec(string)\r\n            if (match) {\r\n                var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\r\n                var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\r\n                return {from: Pos(startLine, startCh),\r\n                    to: Pos(startLine + inside.length - 1,\r\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\r\n                    match: match}\r\n            }\r\n        }\r\n    }\r\n\r\n    function lastMatchIn(string, regexp, endMargin) {\r\n        var match, from = 0\r\n        while (from <= string.length) {\r\n            regexp.lastIndex = from\r\n            var newMatch = regexp.exec(string)\r\n            if (!newMatch) break\r\n            var end = newMatch.index + newMatch[0].length\r\n            if (end > string.length - endMargin) break\r\n            if (!match || end > match.index + match[0].length)\r\n                match = newMatch\r\n            from = newMatch.index + 1\r\n        }\r\n        return match\r\n    }\r\n\r\n    function searchRegexpBackward(doc, regexp, start) {\r\n        regexp = ensureFlags(regexp, \"g\")\r\n        for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\r\n            var string = doc.getLine(line)\r\n            var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\r\n            if (match)\r\n                return {from: Pos(line, match.index),\r\n                    to: Pos(line, match.index + match[0].length),\r\n                    match: match}\r\n        }\r\n    }\r\n\r\n    function searchRegexpBackwardMultiline(doc, regexp, start) {\r\n        if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\r\n        regexp = ensureFlags(regexp, \"gm\")\r\n        var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\r\n        for (var line = start.line, first = doc.firstLine(); line >= first;) {\r\n            for (var i = 0; i < chunkSize && line >= first; i++) {\r\n                var curLine = doc.getLine(line--)\r\n                string = string == null ? curLine : curLine + \"\\n\" + string\r\n            }\r\n            chunkSize *= 2\r\n\r\n            var match = lastMatchIn(string, regexp, endMargin)\r\n            if (match) {\r\n                var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\r\n                var startLine = line + before.length, startCh = before[before.length - 1].length\r\n                return {from: Pos(startLine, startCh),\r\n                    to: Pos(startLine + inside.length - 1,\r\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\r\n                    match: match}\r\n            }\r\n        }\r\n    }\r\n\r\n    var doFold, noFold\r\n    if (String.prototype.normalize) {\r\n        doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\r\n        noFold = function(str) { return str.normalize(\"NFD\") }\r\n    } else {\r\n        doFold = function(str) { return str.toLowerCase() }\r\n        noFold = function(str) { return str }\r\n    }\r\n\r\n    // Maps a position in a case-folded line back to a position in the original line\r\n    // (compensating for codepoints increasing in number during folding)\r\n    function adjustPos(orig, folded, pos, foldFunc) {\r\n        if (orig.length == folded.length) return pos\r\n        for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\r\n            if (min == max) return min\r\n            var mid = (min + max) >> 1\r\n            var len = foldFunc(orig.slice(0, mid)).length\r\n            if (len == pos) return mid\r\n            else if (len > pos) max = mid\r\n            else min = mid + 1\r\n        }\r\n    }\r\n\r\n    function searchStringForward(doc, query, start, caseFold) {\r\n        // Empty string would match anything and never progress, so we\r\n        // define it to match nothing instead.\r\n        if (!query.length) return null\r\n        var fold = caseFold ? doFold : noFold\r\n        var lines = fold(query).split(/\\r|\\n\\r?/)\r\n\r\n        search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\r\n            var orig = doc.getLine(line).slice(ch), string = fold(orig)\r\n            if (lines.length == 1) {\r\n                var found = string.indexOf(lines[0])\r\n                if (found == -1) continue search\r\n                var start = adjustPos(orig, string, found, fold) + ch\r\n                return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\r\n                    to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\r\n            } else {\r\n                var cutFrom = string.length - lines[0].length\r\n                if (string.slice(cutFrom) != lines[0]) continue search\r\n                for (var i = 1; i < lines.length - 1; i++)\r\n                    if (fold(doc.getLine(line + i)) != lines[i]) continue search\r\n                var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\r\n                if (endString.slice(0, lastLine.length) != lastLine) continue search\r\n                return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\r\n                    to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\r\n            }\r\n        }\r\n    }\r\n\r\n    function searchStringBackward(doc, query, start, caseFold) {\r\n        if (!query.length) return null\r\n        var fold = caseFold ? doFold : noFold\r\n        var lines = fold(query).split(/\\r|\\n\\r?/)\r\n\r\n        search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\r\n            var orig = doc.getLine(line)\r\n            if (ch > -1) orig = orig.slice(0, ch)\r\n            var string = fold(orig)\r\n            if (lines.length == 1) {\r\n                var found = string.lastIndexOf(lines[0])\r\n                if (found == -1) continue search\r\n                return {from: Pos(line, adjustPos(orig, string, found, fold)),\r\n                    to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\r\n            } else {\r\n                var lastLine = lines[lines.length - 1]\r\n                if (string.slice(0, lastLine.length) != lastLine) continue search\r\n                for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\r\n                    if (fold(doc.getLine(start + i)) != lines[i]) continue search\r\n                var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\r\n                if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\r\n                return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\r\n                    to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\r\n            }\r\n        }\r\n    }\r\n\r\n    function SearchCursor(doc, query, pos, options) {\r\n        this.atOccurrence = false\r\n        this.doc = doc\r\n        pos = pos ? doc.clipPos(pos) : Pos(0, 0)\r\n        this.pos = {from: pos, to: pos}\r\n\r\n        var caseFold\r\n        if (typeof options == \"object\") {\r\n            caseFold = options.caseFold\r\n        } else { // Backwards compat for when caseFold was the 4th argument\r\n            caseFold = options\r\n            options = null\r\n        }\r\n\r\n        if (typeof query == \"string\") {\r\n            if (caseFold == null) caseFold = false\r\n            this.matches = function(reverse, pos) {\r\n                return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\r\n            }\r\n        } else {\r\n            query = ensureFlags(query, \"gm\")\r\n            if (!options || options.multiline !== false)\r\n                this.matches = function(reverse, pos) {\r\n                    return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\r\n                }\r\n            else\r\n                this.matches = function(reverse, pos) {\r\n                    return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\r\n                }\r\n        }\r\n    }\r\n\r\n    SearchCursor.prototype = {\r\n        findNext: function() {return this.find(false)},\r\n        findPrevious: function() {return this.find(true)},\r\n\r\n        find: function(reverse) {\r\n            var result = this.matches(reverse, this.doc.clipPos(reverse ? this.pos.from : this.pos.to))\r\n\r\n            // Implements weird auto-growing behavior on null-matches for\r\n            // backwards-compatiblity with the vim code (unfortunately)\r\n            while (result && CodeMirror.cmpPos(result.from, result.to) == 0) {\r\n                if (reverse) {\r\n                    if (result.from.ch) result.from = Pos(result.from.line, result.from.ch - 1)\r\n                    else if (result.from.line == this.doc.firstLine()) result = null\r\n                    else result = this.matches(reverse, this.doc.clipPos(Pos(result.from.line - 1)))\r\n                } else {\r\n                    if (result.to.ch < this.doc.getLine(result.to.line).length) result.to = Pos(result.to.line, result.to.ch + 1)\r\n                    else if (result.to.line == this.doc.lastLine()) result = null\r\n                    else result = this.matches(reverse, Pos(result.to.line + 1, 0))\r\n                }\r\n            }\r\n\r\n            if (result) {\r\n                this.pos = result\r\n                this.atOccurrence = true\r\n                return this.pos.match || true\r\n            } else {\r\n                var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\r\n                this.pos = {from: end, to: end}\r\n                return this.atOccurrence = false\r\n            }\r\n        },\r\n\r\n        from: function() {if (this.atOccurrence) return this.pos.from},\r\n        to: function() {if (this.atOccurrence) return this.pos.to},\r\n\r\n        replace: function(newText, origin) {\r\n            if (!this.atOccurrence) return\r\n            var lines = CodeMirror.splitLines(newText)\r\n            this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\r\n            this.pos.to = Pos(this.pos.from.line + lines.length - 1,\r\n                lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\r\n        }\r\n    }\r\n\r\n    CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\r\n        return new SearchCursor(this.doc, query, pos, caseFold)\r\n    })\r\n    CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\r\n        return new SearchCursor(this, query, pos, caseFold)\r\n    })\r\n\r\n    CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\r\n        var ranges = []\r\n        var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\r\n        while (cur.findNext()) {\r\n            if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\r\n            ranges.push({anchor: cur.from(), head: cur.to()})\r\n        }\r\n        if (ranges.length)\r\n            this.setSelections(ranges, 0)\r\n    })\r\n}","import React from 'react';\r\nimport {Drawer, Alert} from \"antd\";\r\nimport CodeMirror from \"codemirror/src/codemirror\"\r\nimport searchcursor from \"./addons/searchcursor\";\r\nimport 'codemirror/lib/codemirror.css';\r\nimport \"./CodeMirrorWrapper.css\";\r\nimport image from '../../empty_image.svg';\r\nimport PopupWord from \"./popupWord/PopupWord\";\r\nimport SynonymsSelector from \"../SynonymsSelector/SynonymsSelector\";\r\n\r\nclass CodeMirrorWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            enableBackground: true,\r\n            drawer: false,\r\n            marker: null\r\n        };\r\n\r\n        this.config = {\r\n            checkMode: 'PARAGRAPH'\r\n        };\r\n\r\n        searchcursor(CodeMirror);\r\n\r\n        this.popupOpen = false;\r\n\r\n        this.processText = this.processText.bind(this);\r\n        this.clickOnWord = this.clickOnWord.bind(this);\r\n        this.replaceWord = this.replaceWord.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.editor = CodeMirror(document.getElementById('code-mirror-node'), {\r\n            lineWrapping: true,\r\n            // lineNumbers: true\r\n        });\r\n        this.editor.focus();\r\n\r\n        this.editor.on('change', this.processText);\r\n        this.editor.getWrapperElement().addEventListener('click', this.clickOnWord);\r\n    }\r\n\r\n    processText(instance, changeObj) {\r\n\r\n        let text = this.editor.getValue();\r\n\r\n        if (text.length) {\r\n\r\n            let afterHighlightCallback = null;\r\n\r\n            //Checando se o usuário alterou o texto utilizando a funcionalidade de substituir sinônimos\r\n            if (this.state.marker && this.state.marker.word.value.toLowerCase() === changeObj.removed[0].toLowerCase())\r\n                //Salvando a animação da palavra alterada para ser executada depois a fim de evitar conflitos entre os marcadores do CodeMirror\r\n                afterHighlightCallback = () => this.highlightTextChange(changeObj);\r\n\r\n            this.setState({enableBackground: false});\r\n\r\n            let wordsCount = [];\r\n\r\n            if (this.config.checkMode === 'PARAGRAPH') { //Checando repetições por parágrafo\r\n\r\n                let lineNumber = 0;\r\n\r\n                this.editor.eachLine(line => {\r\n\r\n                    if (line.text.length > 0) {\r\n\r\n                        line.text.split(' ').forEach(word => {\r\n\r\n                            if (word.length >= 3) {\r\n\r\n                                let wordCount = wordsCount.find(wordObject => wordObject.value === word.toLowerCase() && wordObject.line === lineNumber);\r\n\r\n                                if (wordCount) wordCount.count = wordCount.count + 1;\r\n                                else wordsCount.push({value: word.toLowerCase(), count: 1, line: lineNumber});\r\n                            }\r\n                        });\r\n\r\n                    }\r\n\r\n                    lineNumber++;\r\n                });\r\n\r\n            } else { //Checando repetições no texto completo\r\n\r\n                text.split(' ').forEach(word => {\r\n\r\n                    if (word.length >= 3) {\r\n\r\n                        let wordCount = wordsCount.find(wordObject => wordObject.value === word.toLowerCase());\r\n\r\n                        if (wordCount) wordCount.count = wordCount.count + 1;\r\n                        else wordsCount.push({value: word.toLowerCase(), count: 1});\r\n                    }\r\n                });\r\n            }\r\n\r\n            wordsCount = wordsCount.filter(obj => obj.count > 2);\r\n\r\n            this.highlightText(wordsCount, afterHighlightCallback);\r\n            this.props.setWords(wordsCount);\r\n\r\n        } else this.setState({enableBackground: true});\r\n    }\r\n\r\n    highlightTextChange(changeObj) {\r\n\r\n        let {from, to, text, removed} = changeObj;\r\n        let difference;\r\n\r\n        difference = text[0].length - removed[0].length;\r\n\r\n        to.ch = to.ch + difference;\r\n\r\n        let mark = this.editor.markText(from, to, {\r\n            className: 'text-marker-recent-replaced'\r\n        });\r\n\r\n        setTimeout(() => {\r\n\r\n            mark.clear();\r\n\r\n        }, 1000)\r\n    }\r\n\r\n    highlightText(wordsCount, afterHighlightCallback) {\r\n\r\n        this.clearMarks();\r\n\r\n        wordsCount.forEach(word => {\r\n\r\n            let regex = new RegExp(`(?<=(^|\\\\s))${word.value}(?=[\\\\s.;\\\\b])`, 'gi');\r\n\r\n            let cursor = this.editor.getSearchCursor(regex);\r\n\r\n            let currentWord = null;\r\n\r\n            while (currentWord = cursor.findNext()) {\r\n\r\n                let position = {\r\n                    from: cursor.from(),\r\n                    to: cursor.to()\r\n                };\r\n\r\n                //Checando se a linha da palavra encontrada é a mesma do objeto de palavras repetidas\r\n                if (word.line === undefined || word.line === position.from.line) {\r\n\r\n                    let mark = this.editor.markText(position.from, position.to, {\r\n                        className: 'text-marker'\r\n                    });\r\n\r\n                    mark.word = word;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (typeof afterHighlightCallback === 'function') afterHighlightCallback();\r\n    }\r\n\r\n    clearMarks() {\r\n        let marks = this.editor.getAllMarks();\r\n        marks.forEach(mark => mark.clear())\r\n    }\r\n\r\n    clickOnWord(event) {\r\n\r\n        let lineCh = this.editor.coordsChar({left: event.clientX, top: event.clientY});\r\n        let markers = this.editor.findMarksAt(lineCh);\r\n\r\n        if (markers.length) {\r\n\r\n            this.setState({\r\n                drawer: true,\r\n                marker: markers[0]\r\n            })\r\n\r\n        }\r\n\r\n        // if (markers.length && !this.popupOpen) {\r\n        //\r\n        //     event.stopPropagation();\r\n        //     event.preventDefault();\r\n        //\r\n        //     let marker = markers[0];\r\n        //\r\n        //     this.currentPopup = PopupWord.createNode(marker);\r\n        //     this.currentPopup.addEventListener('click', () => {\r\n        //\r\n        //         this.popupOpen = false;\r\n        //         this.currentPopup.remove()\r\n        //     });\r\n        //\r\n        //     this.popupOpen = true;\r\n        //\r\n        //     this.editor.addWidget(lineCh, this.currentPopup);\r\n        // }\r\n    }\r\n\r\n    replaceWord(word) {\r\n\r\n        this.setState({drawer: false});\r\n        let {from, to} = this.state.marker.find();\r\n        this.editor.replaceRange(word, from, to);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"code-mirror-wrapper\" style={{position: 'relative'}}>\r\n                    <div id=\"code-mirror-node\"/>\r\n                    {this.state.enableBackground && <div className=\"image-container\">\r\n                        <img src={image} alt=\"Vazio\"/>\r\n                        <span>Que tal escrever algo? Mínimo de 120 caracteres</span>\r\n                    </div>}\r\n                </div>\r\n                {this.state.marker !== null &&\r\n                <Drawer\r\n                    title={`Sinônimos de \"${this.state.marker.word.value}\"`}\r\n                    placement=\"bottom\"\r\n                    closable={true}\r\n                    onClose={() => this.setState({drawer: false})}\r\n                    visible={this.state.drawer}\r\n                    height=\"50%\"\r\n                >\r\n                    <Alert\r\n                        closable={true}\r\n                        message=\"Dica: clique em um dos sinônimos para substituir no texto\"\r\n                        type=\"success\"\r\n                    />\r\n                    <SynonymsSelector\r\n                        word={this.state.marker.word.value}\r\n                        hideTitle={true}\r\n                        replaceWord={this.replaceWord}\r\n                    />\r\n                </Drawer>}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CodeMirrorWrapper;","import React from 'react';\r\nimport {Switch} from \"antd\";\r\nimport {BulbOutlined, BulbFilled, GithubOutlined, MailFilled, LinkedinFilled} from \"@ant-design/icons\";\r\nimport './App.css';\r\nimport WordCount from \"../WordCount/WordCount\";\r\nimport TextInput from \"../TextInput/TextInput\";\r\nimport SynonymsSelector from \"../SynonymsSelector/SynonymsSelector\";\r\nimport MediaQueries from \"../../libs/MediaQueries\";\r\nimport WordCountPopover from \"../WordCountPopover/WordCountPopover\";\r\nimport CodeMirrorWrapper from \"../CodeMirrorWrapper/CodeMirrorWrapper\";\r\n\r\nfunction App() {\r\n\r\n    const [text, setText] = React.useState('');\r\n    const [words, setWords] = React.useState([]);\r\n    const [word, setWord] = React.useState(null);\r\n    const [enableHighlights, setEnableHighlights] = React.useState(false);\r\n    const [desktopMode, setDesktopMode] = React.useState(MediaQueries.MD());\r\n\r\n    function processText(value, e) {\r\n\r\n        const inputText = typeof value === 'string' ? value : e.target.value;\r\n\r\n        setText(inputText);\r\n\r\n        if (inputText.length >= 120) {\r\n\r\n            setEnableHighlights(true);\r\n\r\n            let textArray = inputText.split(' ');\r\n\r\n            let wordsCount = [];\r\n\r\n            textArray.forEach(word => {\r\n\r\n                if (word.length >= 3) {\r\n\r\n                    let wordCount = wordsCount.find(wordObject => wordObject.value === word.toLowerCase());\r\n\r\n                    if (wordCount) wordCount.count = wordCount.count + 1;\r\n                    else wordsCount.push({value: word.toLowerCase(), count: 1});\r\n                }\r\n            });\r\n\r\n            setWords(wordsCount.filter(word => word.count > 2));\r\n\r\n        } else {\r\n\r\n            setEnableHighlights(false);\r\n            setWords([]);\r\n            setWord(null);\r\n        }\r\n    }\r\n\r\n    function toggleNightMode(enable) {\r\n\r\n        let body = document.querySelector('body');\r\n        let metaTag = document.getElementById('meta-tag-theme-color');\r\n\r\n        if (enable) {\r\n\r\n            body.classList.add('dark-mode');\r\n            metaTag.setAttribute('content', '#2b2b2b')\r\n\r\n        } else {\r\n\r\n            body.classList.remove('dark-mode');\r\n            metaTag.setAttribute('content', '#FFFFFF')\r\n        }\r\n    }\r\n\r\n    //Criando evento para detecar resize da janela\r\n    React.useEffect(() => {\r\n\r\n        let resizeHandler = function (event) {\r\n\r\n            setDesktopMode(MediaQueries.MD());\r\n        };\r\n\r\n        window.addEventListener('resize', resizeHandler);\r\n\r\n        //Cleanup\r\n        return () => window.removeEventListener('resize', resizeHandler);\r\n\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n\r\n        let handler = function (event) {\r\n\r\n            let header = document.querySelector('.header');\r\n\r\n            if (event.target.scrollTop >= 50) header.classList.add('box-shadow');\r\n            else header.classList.remove('box-shadow');\r\n        };\r\n\r\n        document.body.addEventListener('scroll', handler);\r\n\r\n        return () => document.body.removeEventListener('scroll', handler);\r\n\r\n    });\r\n\r\n    return <>\r\n        <header className=\"header\">\r\n            <h1>eSSay</h1>\r\n            <div className=\"toggle-dark-mode-container\">\r\n                <Switch\r\n                    checkedChildren={<BulbFilled/>}\r\n                    unCheckedChildren={<BulbOutlined/>}\r\n                    onChange={toggleNightMode}\r\n                /></div>\r\n        </header>\r\n        <main className=\"content\">\r\n            {desktopMode && <aside className=\"aside\">\r\n                {word !== null && <SynonymsSelector word={word}/>}\r\n            </aside>}\r\n            <div className=\"container\">\r\n                {!desktopMode && <WordCountPopover words={words}/>}\r\n                {/*<TextInput*/}\r\n                {/*    value={text}*/}\r\n                {/*    words={words}*/}\r\n                {/*    processText={processText}*/}\r\n                {/*    enableHighlights={enableHighlights}*/}\r\n                {/*    setWord={setWord}*/}\r\n                {/*/>*/}\r\n                <CodeMirrorWrapper\r\n                    setWords={setWords}\r\n                />\r\n            </div>\r\n            {desktopMode && <aside className=\"aside\">\r\n                {words.length > 0 && <WordCount words={words}/>}\r\n            </aside>}\r\n        </main>\r\n        <footer className=\"footer\">\r\n            <a href=\"https://github.com/victormt4/essay-analyzer\" target=\"_blank\"\r\n               rel=\"noopener noreferrer\"><GithubOutlined/></a>\r\n            <a href=\"mailto:victor.mt4@gmail.com\"><MailFilled/></a>\r\n            <a href=\"https://www.linkedin.com/in/victor-mota-a01b8714a/\" target=\"_blank\"\r\n               rel=\"noopener noreferrer\"><LinkedinFilled/></a>\r\n        </footer>\r\n    </>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/empty_image.6606dc27.svg\";"],"sourceRoot":""}