{"version":3,"sources":["components/WordCount/WordCount.js","components/SynonymsSelector/SynonymsSelector.js","libs/MediaQueries.js","components/WordCountPopover/WordCountPopover.js","components/CodeMirrorWrapper/addons/searchcursor.js","components/CodeMirrorWrapper/popupWord/PopupWord.js","components/CodeMirrorWrapper/CodeMirrorWrapper.js","components/App/App.js","serviceWorker.js","index.js","empty_image.svg"],"names":["WordCount","props","className","words","sort","a","b","count","map","word","key","value","SynonymsSelector","React","useState","requestStatus","synonyms","state","setState","useEffect","prevState","fetch","toLowerCase","normalize","replace","method","headers","then","res","text","html","el","document","createElement","innerHTML","querySelectorAll","forEach","synonym","push","innerText","catch","error","console","log","slice","MediaQueries","SM","window","matchMedia","matches","MD","LG","XL","WordCountPopover","content","trigger","placement","shape","type","length","CodeMirror","doFold","noFold","Pos","ensureFlags","regexp","flags","current","ignoreCase","global","multiline","regexpFlags","target","i","indexOf","charAt","RegExp","source","maybeMultiline","test","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","searchRegexpForwardMultiline","chunk","curLine","before","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","end","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","this","atOccurrence","clipPos","reverse","String","prototype","str","findNext","find","findPrevious","result","cmpPos","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","anchor","head","setSelections","PopupWord","createNode","marker","div","id","style","position","classList","add","addEventListener","remove","CodeMirrorWrapper","enableBackground","searchcursor","popups","processText","bind","clickOnWord","editor","getElementById","lineWrapping","focus","on","getWrapperElement","instance","changeObj","getValue","wordsCount","wordCount","wordObject","filter","obj","highlightText","setWords","clearMarks","regex","cursor","markText","getAllMarks","mark","clear","event","lineCh","coordsChar","left","clientX","clientY","markers","findMarksAt","preventDefault","popup","addWidget","src","image","alt","Component","App","setWord","desktopMode","setDesktopMode","resizeHandler","removeEventListener","checkedChildren","BulbFilled","unCheckedChildren","BulbOutlined","onChange","enable","body","querySelector","href","rel","GithubOutlined","MailFilled","LinkedinFilled","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.133ad43c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './WordCount.css';\r\n\r\nexport default function WordCount(props) {\r\n\r\n    return (<div className=\"word-count\">\r\n        {props.words.sort(((a, b) => {\r\n            if (a.count < b.count) return 1;\r\n            else if (a.count > b.count) return -1;\r\n            else return 0;\r\n        })).map(word => (<div key={word.value} className=\"word-count-group\">\r\n            <span className=\"word-count-title\">{word.value}</span>\r\n            <span className=\"word-count-subtitle\">{word.count} repetições</span>\r\n        </div>))}\r\n    </div>);\r\n}","import React from \"react\";\r\nimport './SynonymsSelector.css';\r\n\r\nexport default function SynonymsSelector(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        requestStatus: -1,\r\n        synonyms: []\r\n    });\r\n\r\n    React.useEffect(() => {\r\n\r\n        setState(prevState => ({...prevState, requestStatus: 1}));\r\n\r\n        let request = fetch(`https://cors-anywhere.herokuapp.com/https://www.sinonimos.com.br/${props.word.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")}`, {\r\n            method: 'GET',\r\n            headers: {'x-requested-with': 'xmlhttprequest', 'Content-Type': 'text/plain; charset=ISO-8859-1'}\r\n        });\r\n\r\n        request\r\n            .then(res => res.text())\r\n            .then(html => {\r\n\r\n                let el = document.createElement('div');\r\n\r\n                el.innerHTML = html;\r\n\r\n                let synonyms = el.querySelectorAll('.s-wrapper .sinonimos a');\r\n\r\n                let words = [];\r\n\r\n                synonyms.forEach(synonym => {\r\n\r\n                    words.push(synonym.innerText);\r\n                });\r\n\r\n                setState(prevState => ({...prevState, synonyms: words, requestStatus: 200}))\r\n\r\n            }).catch(error => console.log(error))\r\n\r\n    }, [props.word]);\r\n\r\n    return (<div className=\"synonyms-selector\">\r\n        <span className=\"synonyms-selector-title\">{props.word}</span>\r\n        <div className=\"synonyms-container\">\r\n            {state.requestStatus === 200\r\n                ? state.synonyms.slice(0, 10).map(synonym => <span key={synonym}>{synonym}</span>)\r\n                : <span>carregando...</span>\r\n            }\r\n        </div>\r\n    </div>)\r\n}","const MediaQueries = {\r\n    SM: () => window.matchMedia('(min-width: 576px)').matches,\r\n    MD: () => window.matchMedia('(min-width: 768px)').matches,\r\n    LG: () => window.matchMedia('(min-width: 992px)').matches,\r\n    XL: () => window.matchMedia('(min-width: 1200px)').matches\r\n};\r\nexport default MediaQueries;","import React from \"react\";\r\nimport {Popover, Button} from \"antd\";\r\nimport './WordCountPopover.css';\r\n\r\nexport default function WordCountPopover (props) {\r\n\r\n    let content = (\r\n        <div className=\"word-count-popover-content\">\r\n            { props.words.sort(((a, b) => {\r\n                if (a.count < b.count) return 1;\r\n                else if (a.count > b.count) return -1;\r\n                else return 0;\r\n            })).map(word => (<div key={word.value} className=\"word-count-group\">\r\n                <span className=\"word-count-popover-title\">{word.value}</span>\r\n                <span className=\"word-count-popover-subtitle\">{word.count} repetições</span>\r\n            </div>))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"word-count-popover\">\r\n            <Popover content={content} trigger=\"click\" placement=\"bottomRight\">\r\n                <Button shape=\"round\" type=\"primary\" >{props.words ? props.words.length : 0} palavras repetidas</Button>\r\n            </Popover>\r\n        </div>\r\n    )\r\n\r\n}","// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\nexport default function(CodeMirror) {\r\n    \r\n    var Pos = CodeMirror.Pos\r\n\r\n    function regexpFlags(regexp) {\r\n        var flags = regexp.flags\r\n        return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\r\n            + (regexp.global ? \"g\" : \"\")\r\n            + (regexp.multiline ? \"m\" : \"\")\r\n    }\r\n\r\n    function ensureFlags(regexp, flags) {\r\n        var current = regexpFlags(regexp), target = current\r\n        for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\r\n            target += flags.charAt(i)\r\n        return current == target ? regexp : new RegExp(regexp.source, target)\r\n    }\r\n\r\n    function maybeMultiline(regexp) {\r\n        return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\r\n    }\r\n\r\n    function searchRegexpForward(doc, regexp, start) {\r\n        regexp = ensureFlags(regexp, \"g\")\r\n        for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\r\n            regexp.lastIndex = ch\r\n            var string = doc.getLine(line), match = regexp.exec(string)\r\n            if (match)\r\n                return {from: Pos(line, match.index),\r\n                    to: Pos(line, match.index + match[0].length),\r\n                    match: match}\r\n        }\r\n    }\r\n\r\n    function searchRegexpForwardMultiline(doc, regexp, start) {\r\n        if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\r\n\r\n        regexp = ensureFlags(regexp, \"gm\")\r\n        var string, chunk = 1\r\n        for (var line = start.line, last = doc.lastLine(); line <= last;) {\r\n            // This grows the search buffer in exponentially-sized chunks\r\n            // between matches, so that nearby matches are fast and don't\r\n            // require concatenating the whole document (in case we're\r\n            // searching for something that has tons of matches), but at the\r\n            // same time, the amount of retries is limited.\r\n            for (var i = 0; i < chunk; i++) {\r\n                if (line > last) break\r\n                var curLine = doc.getLine(line++)\r\n                string = string == null ? curLine : string + \"\\n\" + curLine\r\n            }\r\n            chunk = chunk * 2\r\n            regexp.lastIndex = start.ch\r\n            var match = regexp.exec(string)\r\n            if (match) {\r\n                var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\r\n                var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\r\n                return {from: Pos(startLine, startCh),\r\n                    to: Pos(startLine + inside.length - 1,\r\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\r\n                    match: match}\r\n            }\r\n        }\r\n    }\r\n\r\n    function lastMatchIn(string, regexp, endMargin) {\r\n        var match, from = 0\r\n        while (from <= string.length) {\r\n            regexp.lastIndex = from\r\n            var newMatch = regexp.exec(string)\r\n            if (!newMatch) break\r\n            var end = newMatch.index + newMatch[0].length\r\n            if (end > string.length - endMargin) break\r\n            if (!match || end > match.index + match[0].length)\r\n                match = newMatch\r\n            from = newMatch.index + 1\r\n        }\r\n        return match\r\n    }\r\n\r\n    function searchRegexpBackward(doc, regexp, start) {\r\n        regexp = ensureFlags(regexp, \"g\")\r\n        for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\r\n            var string = doc.getLine(line)\r\n            var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\r\n            if (match)\r\n                return {from: Pos(line, match.index),\r\n                    to: Pos(line, match.index + match[0].length),\r\n                    match: match}\r\n        }\r\n    }\r\n\r\n    function searchRegexpBackwardMultiline(doc, regexp, start) {\r\n        if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\r\n        regexp = ensureFlags(regexp, \"gm\")\r\n        var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\r\n        for (var line = start.line, first = doc.firstLine(); line >= first;) {\r\n            for (var i = 0; i < chunkSize && line >= first; i++) {\r\n                var curLine = doc.getLine(line--)\r\n                string = string == null ? curLine : curLine + \"\\n\" + string\r\n            }\r\n            chunkSize *= 2\r\n\r\n            var match = lastMatchIn(string, regexp, endMargin)\r\n            if (match) {\r\n                var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\r\n                var startLine = line + before.length, startCh = before[before.length - 1].length\r\n                return {from: Pos(startLine, startCh),\r\n                    to: Pos(startLine + inside.length - 1,\r\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\r\n                    match: match}\r\n            }\r\n        }\r\n    }\r\n\r\n    var doFold, noFold\r\n    if (String.prototype.normalize) {\r\n        doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\r\n        noFold = function(str) { return str.normalize(\"NFD\") }\r\n    } else {\r\n        doFold = function(str) { return str.toLowerCase() }\r\n        noFold = function(str) { return str }\r\n    }\r\n\r\n    // Maps a position in a case-folded line back to a position in the original line\r\n    // (compensating for codepoints increasing in number during folding)\r\n    function adjustPos(orig, folded, pos, foldFunc) {\r\n        if (orig.length == folded.length) return pos\r\n        for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\r\n            if (min == max) return min\r\n            var mid = (min + max) >> 1\r\n            var len = foldFunc(orig.slice(0, mid)).length\r\n            if (len == pos) return mid\r\n            else if (len > pos) max = mid\r\n            else min = mid + 1\r\n        }\r\n    }\r\n\r\n    function searchStringForward(doc, query, start, caseFold) {\r\n        // Empty string would match anything and never progress, so we\r\n        // define it to match nothing instead.\r\n        if (!query.length) return null\r\n        var fold = caseFold ? doFold : noFold\r\n        var lines = fold(query).split(/\\r|\\n\\r?/)\r\n\r\n        search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\r\n            var orig = doc.getLine(line).slice(ch), string = fold(orig)\r\n            if (lines.length == 1) {\r\n                var found = string.indexOf(lines[0])\r\n                if (found == -1) continue search\r\n                var start = adjustPos(orig, string, found, fold) + ch\r\n                return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\r\n                    to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\r\n            } else {\r\n                var cutFrom = string.length - lines[0].length\r\n                if (string.slice(cutFrom) != lines[0]) continue search\r\n                for (var i = 1; i < lines.length - 1; i++)\r\n                    if (fold(doc.getLine(line + i)) != lines[i]) continue search\r\n                var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\r\n                if (endString.slice(0, lastLine.length) != lastLine) continue search\r\n                return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\r\n                    to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\r\n            }\r\n        }\r\n    }\r\n\r\n    function searchStringBackward(doc, query, start, caseFold) {\r\n        if (!query.length) return null\r\n        var fold = caseFold ? doFold : noFold\r\n        var lines = fold(query).split(/\\r|\\n\\r?/)\r\n\r\n        search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\r\n            var orig = doc.getLine(line)\r\n            if (ch > -1) orig = orig.slice(0, ch)\r\n            var string = fold(orig)\r\n            if (lines.length == 1) {\r\n                var found = string.lastIndexOf(lines[0])\r\n                if (found == -1) continue search\r\n                return {from: Pos(line, adjustPos(orig, string, found, fold)),\r\n                    to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\r\n            } else {\r\n                var lastLine = lines[lines.length - 1]\r\n                if (string.slice(0, lastLine.length) != lastLine) continue search\r\n                for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\r\n                    if (fold(doc.getLine(start + i)) != lines[i]) continue search\r\n                var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\r\n                if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\r\n                return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\r\n                    to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\r\n            }\r\n        }\r\n    }\r\n\r\n    function SearchCursor(doc, query, pos, options) {\r\n        this.atOccurrence = false\r\n        this.doc = doc\r\n        pos = pos ? doc.clipPos(pos) : Pos(0, 0)\r\n        this.pos = {from: pos, to: pos}\r\n\r\n        var caseFold\r\n        if (typeof options == \"object\") {\r\n            caseFold = options.caseFold\r\n        } else { // Backwards compat for when caseFold was the 4th argument\r\n            caseFold = options\r\n            options = null\r\n        }\r\n\r\n        if (typeof query == \"string\") {\r\n            if (caseFold == null) caseFold = false\r\n            this.matches = function(reverse, pos) {\r\n                return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\r\n            }\r\n        } else {\r\n            query = ensureFlags(query, \"gm\")\r\n            if (!options || options.multiline !== false)\r\n                this.matches = function(reverse, pos) {\r\n                    return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\r\n                }\r\n            else\r\n                this.matches = function(reverse, pos) {\r\n                    return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\r\n                }\r\n        }\r\n    }\r\n\r\n    SearchCursor.prototype = {\r\n        findNext: function() {return this.find(false)},\r\n        findPrevious: function() {return this.find(true)},\r\n\r\n        find: function(reverse) {\r\n            var result = this.matches(reverse, this.doc.clipPos(reverse ? this.pos.from : this.pos.to))\r\n\r\n            // Implements weird auto-growing behavior on null-matches for\r\n            // backwards-compatiblity with the vim code (unfortunately)\r\n            while (result && CodeMirror.cmpPos(result.from, result.to) == 0) {\r\n                if (reverse) {\r\n                    if (result.from.ch) result.from = Pos(result.from.line, result.from.ch - 1)\r\n                    else if (result.from.line == this.doc.firstLine()) result = null\r\n                    else result = this.matches(reverse, this.doc.clipPos(Pos(result.from.line - 1)))\r\n                } else {\r\n                    if (result.to.ch < this.doc.getLine(result.to.line).length) result.to = Pos(result.to.line, result.to.ch + 1)\r\n                    else if (result.to.line == this.doc.lastLine()) result = null\r\n                    else result = this.matches(reverse, Pos(result.to.line + 1, 0))\r\n                }\r\n            }\r\n\r\n            if (result) {\r\n                this.pos = result\r\n                this.atOccurrence = true\r\n                return this.pos.match || true\r\n            } else {\r\n                var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\r\n                this.pos = {from: end, to: end}\r\n                return this.atOccurrence = false\r\n            }\r\n        },\r\n\r\n        from: function() {if (this.atOccurrence) return this.pos.from},\r\n        to: function() {if (this.atOccurrence) return this.pos.to},\r\n\r\n        replace: function(newText, origin) {\r\n            if (!this.atOccurrence) return\r\n            var lines = CodeMirror.splitLines(newText)\r\n            this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\r\n            this.pos.to = Pos(this.pos.from.line + lines.length - 1,\r\n                lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\r\n        }\r\n    }\r\n\r\n    CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\r\n        return new SearchCursor(this.doc, query, pos, caseFold)\r\n    })\r\n    CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\r\n        return new SearchCursor(this, query, pos, caseFold)\r\n    })\r\n\r\n    CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\r\n        var ranges = []\r\n        var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\r\n        while (cur.findNext()) {\r\n            if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\r\n            ranges.push({anchor: cur.from(), head: cur.to()})\r\n        }\r\n        if (ranges.length)\r\n            this.setSelections(ranges, 0)\r\n    })\r\n}","import './PopupWord.css';\r\n\r\nconst PopupWord = {\r\n\r\n    createNode: function (marker) {\r\n\r\n        let div = document.createElement('div');\r\n        div.id = 'container-popup-word';\r\n        div.innerText = marker.word.value;\r\n        div.style.position = 'absolute';\r\n        div.classList.add('popup-word');\r\n\r\n        div.addEventListener('click', function () {\r\n            this.remove();\r\n        });\r\n\r\n        return div;\r\n    }\r\n\r\n};\r\nexport default PopupWord;","import React from 'react';\r\nimport CodeMirror from \"codemirror/src/codemirror\"\r\nimport searchcursor from \"./addons/searchcursor\";\r\nimport 'codemirror/lib/codemirror.css';\r\nimport \"./CodeMirrorWrapper.css\";\r\nimport image from '../../empty_image.svg';\r\nimport PopupWord from \"./popupWord/PopupWord\";\r\n\r\nclass CodeMirrorWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {enableBackground: true};\r\n\r\n        searchcursor(CodeMirror);\r\n\r\n        this.popups = [];\r\n\r\n        this.processText = this.processText.bind(this);\r\n        this.clickOnWord = this.clickOnWord.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.editor = CodeMirror(document.getElementById('code-mirror-node'), {\r\n            lineWrapping: true\r\n            // lineNumbers: true\r\n        });\r\n        this.editor.focus();\r\n\r\n        this.editor.on('change', this.processText);\r\n        this.editor.getWrapperElement().addEventListener('click', this.clickOnWord);\r\n    }\r\n\r\n    processText(instance, changeObj) {\r\n\r\n        let text = this.editor.getValue();\r\n\r\n        if (text.length) this.setState({enableBackground: false});\r\n        else this.setState({enableBackground: true});\r\n\r\n        let wordsCount = [];\r\n\r\n        text.split(' ').forEach(word => {\r\n\r\n            if (word.length >= 3) {\r\n\r\n                let wordCount = wordsCount.find(wordObject => wordObject.value === word.toLowerCase());\r\n\r\n                if (wordCount) wordCount.count = wordCount.count + 1;\r\n                else wordsCount.push({value: word.toLowerCase(), count: 1});\r\n            }\r\n        });\r\n\r\n        wordsCount = wordsCount.filter(obj => obj.count > 2);\r\n\r\n        this.highlightText(wordsCount);\r\n        this.props.setWords(wordsCount);\r\n    }\r\n\r\n    highlightText(wordsCount) {\r\n\r\n        this.clearMarks();\r\n\r\n        wordsCount.forEach(word => {\r\n\r\n            let regex = new RegExp(`(?<=(^|\\\\s))${word.value}(?=[\\\\s.;\\\\b])`, 'gi');\r\n\r\n            let cursor = this.editor.getSearchCursor(regex);\r\n\r\n            let currentWord = null;\r\n\r\n            while (currentWord = cursor.findNext()) {\r\n\r\n                let position = {\r\n                    from: cursor.from(),\r\n                    to: cursor.to()\r\n                };\r\n\r\n                let mark = this.editor.markText(position.from, position.to, {\r\n                    className: 'text-marker'\r\n                });\r\n\r\n                mark.word = word;\r\n            }\r\n        })\r\n    }\r\n\r\n    clearMarks() {\r\n\r\n        let marks = this.editor.getAllMarks();\r\n\r\n        marks.forEach(mark => mark.clear())\r\n    }\r\n\r\n    clickOnWord(event) {\r\n\r\n        console.log('click');\r\n\r\n        let lineCh = this.editor.coordsChar({left: event.clientX, top: event.clientY});\r\n        let markers = this.editor.findMarksAt(lineCh);\r\n\r\n        if (markers.length) {\r\n\r\n            event.preventDefault();\r\n\r\n            let marker = markers[0];\r\n\r\n            let popup = PopupWord.createNode(marker);\r\n\r\n            this.popups.push(popup);\r\n\r\n            this.editor.addWidget(lineCh, popup);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"code-mirror-wrapper\" style={{position: 'relative'}}>\r\n                <div id=\"code-mirror-node\"/>\r\n                {this.state.enableBackground && <div className=\"image-container\">\r\n                    <img src={image} alt=\"Vazio\"/>\r\n                    <span>Que tal escrever algo? Mínimo de 120 caracteres</span>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CodeMirrorWrapper;","import React from 'react';\r\nimport {Switch} from \"antd\";\r\nimport {BulbOutlined, BulbFilled, GithubOutlined, MailFilled, LinkedinFilled} from \"@ant-design/icons\";\r\nimport './App.css';\r\nimport WordCount from \"../WordCount/WordCount\";\r\nimport TextInput from \"../TextInput/TextInput\";\r\nimport SynonymsSelector from \"../SynonymsSelector/SynonymsSelector\";\r\nimport MediaQueries from \"../../libs/MediaQueries\";\r\nimport WordCountPopover from \"../WordCountPopover/WordCountPopover\";\r\nimport CodeMirrorWrapper from \"../CodeMirrorWrapper/CodeMirrorWrapper\";\r\n\r\nfunction App() {\r\n\r\n    const [text, setText] = React.useState('');\r\n    const [words, setWords] = React.useState([]);\r\n    const [word, setWord] = React.useState(null);\r\n    const [enableHighlights, setEnableHighlights] = React.useState(false);\r\n    const [desktopMode, setDesktopMode] = React.useState(MediaQueries.MD());\r\n\r\n    function processText(value, e) {\r\n\r\n        const inputText = typeof value === 'string' ? value : e.target.value;\r\n\r\n        setText(inputText);\r\n\r\n        if (inputText.length >= 120) {\r\n\r\n            setEnableHighlights(true);\r\n\r\n            let textArray = inputText.split(' ');\r\n\r\n            let wordsCount = [];\r\n\r\n            textArray.forEach(word => {\r\n\r\n                if (word.length >= 3) {\r\n\r\n                    let wordCount = wordsCount.find(wordObject => wordObject.value === word.toLowerCase());\r\n\r\n                    if (wordCount) wordCount.count = wordCount.count + 1;\r\n                    else wordsCount.push({value: word.toLowerCase(), count: 1});\r\n                }\r\n            });\r\n\r\n            setWords(wordsCount.filter(word => word.count > 2));\r\n\r\n        } else {\r\n\r\n            setEnableHighlights(false);\r\n            setWords([]);\r\n            setWord(null);\r\n        }\r\n    }\r\n\r\n    function toggleNightMode(enable) {\r\n\r\n        let body = document.querySelector('body');\r\n\r\n        if (enable) body.classList.add('dark-mode');\r\n        else body.classList.remove('dark-mode')\r\n    }\r\n\r\n    //Criando evento para detecar resize da janela\r\n    React.useEffect(() => {\r\n\r\n        let resizeHandler = function (event) {\r\n\r\n            setDesktopMode(MediaQueries.MD());\r\n        };\r\n\r\n        window.addEventListener('resize', resizeHandler);\r\n\r\n        //Cleanup\r\n        return () => window.removeEventListener('resize', resizeHandler);\r\n\r\n    }, []);\r\n\r\n    return <>\r\n        <header className=\"header\">\r\n            <h1>eSSay</h1>\r\n            <div className=\"toggle-dark-mode-container\">\r\n                <Switch\r\n                    checkedChildren={<BulbFilled/>}\r\n                    unCheckedChildren={<BulbOutlined/>}\r\n                    onChange={toggleNightMode}\r\n                /></div>\r\n        </header>\r\n        <main className=\"content\">\r\n            {desktopMode && <aside className=\"aside\">\r\n                {word !== null && <SynonymsSelector word={word}/>}\r\n            </aside>}\r\n            <div className=\"container\">\r\n                {!desktopMode && <WordCountPopover words={words}/>}\r\n                {/*<TextInput*/}\r\n                {/*    value={text}*/}\r\n                {/*    words={words}*/}\r\n                {/*    processText={processText}*/}\r\n                {/*    enableHighlights={enableHighlights}*/}\r\n                {/*    setWord={setWord}*/}\r\n                {/*/>*/}\r\n                <CodeMirrorWrapper\r\n                    setWords={setWords}\r\n                    setWord={setWord}\r\n                />\r\n            </div>\r\n            {desktopMode && <aside className=\"aside\">\r\n                {words.length > 0 && <WordCount words={words}/>}\r\n            </aside>}\r\n        </main>\r\n        <footer className=\"footer\">\r\n            <a href=\"https://github.com/victormt4/essay-analyzer\" target=\"_blank\"\r\n               rel=\"noopener noreferrer\"><GithubOutlined/></a>\r\n            <a href=\"mailto:victor.mt4@gmail.com\"><MailFilled/></a>\r\n            <a href=\"https://www.linkedin.com/in/victor-mota-a01b8714a/\" target=\"_blank\"\r\n               rel=\"noopener noreferrer\"><LinkedinFilled/></a>\r\n        </footer>\r\n    </>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/empty_image.6606dc27.svg\";"],"sourceRoot":""}